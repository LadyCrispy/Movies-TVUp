{"version":3,"sources":["services/movies.services.js","components/cards/movies.cards.jsx","components/movies_list.jsx","components/movie_details.jsx","components/movie_add_form.jsx","components/NavBar.jsx","App.js","index.js"],"names":["services","_this","this","Object","classCallCheck","getAllMovies","service","get","then","res","data","catch","err","console","log","movieDetails","id","concat","deleteTheMovie","delete","alert","editTheMovie","movieUpdated","put","addMovie","movie","post","handleUpload","theFile","axios","create","baseURL","process","withCredentials","MoviesCard","props","react_default","a","createElement","Card","bg","className","Img","variant","src","poster_path","alt","original_title","Body","Title","react_router_dom","to","_id","Button","onClick","MoviesList","possibleConstructorReturn","getPrototypeOf","call","deleteMovie","x","peli","state","movies","filter","setState","searchMovie","e","search","target","value","toLowerCase","includes","filteredMovies","deleted","MoviesServices","_this2","_this3","FormControl","as","onChange","type","placeholder","playsInline","autoPlay","muted","loop","length","map","idx","movies_cards_MoviesCard","assign","key","Component","MovieDetails","handlechange","_e$target","name","objectSpread","defineProperty","handleSubmit","preventDefault","handleFileUpload","uploadData","FormData","append","files","response","secure_url","hideBtn","setTimeout","MoviesService","match","params","theMovie","onSubmit","overview","href","video","rel","Accordion","bsPrefix","Header","Toggle","eventKey","Collapse","Form","Group","htmlFor","Label","Control","rows","MovieAddForm","handleClose","show","handleShow","setRedirect","redirect","movieId","bind","assertThisInitialized","react_router","Modal_default","onHide","closeButton","required","NavBar","Navbar_default","expand","fixed","Brand","aria-controls","movie_add_form","App","NavBar_NavBar","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.057123b8.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class services {\n\n    constructor() {\n  \n      this.service = axios.create({\n        baseURL: `${process.env.REACT_APP_URL}api`,\n        withCredentials: true\n      })\n    }\n  \n    getAllMovies = () => {\n      return this.service.get(`/movies`)\n        .then(res => res.data)\n        .catch(err => console.log(err))\n    }\n\n    movieDetails = id =>{\n      return this.service.get(`/movies/${id}`)\n        .then(res=>res.data)\n        .catch(err=> console.log(err))\n    }\n\n    deleteTheMovie = id =>{\n      return this.service.delete(`/movies/${id}`)\n        .then(res=> res.data)\n        .catch(err=> alert(err))\n    }\n\n    editTheMovie = (id, movieUpdated) =>{\n      return this.service.put(`/movies/${id}`, movieUpdated)\n        .then(res=> res.data)\n        .catch(err=>console.log(err))\n    }\n\n    addMovie = movie => {\n      return this.service.post('/movies', movie)\n          .then(res => res.data)\n          .catch(err => console.log(err))\n    }\n\n    handleUpload = theFile => {\n      return this.service.post('/upload', theFile)\n          .then(res => res.data)\n          .catch(err => console.log(err));\n  }\n}    ","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Card, Button} from 'react-bootstrap'\n\nexport const MoviesCard= (props) =>{\n\n    return(\n        <Card bg='secondary' className='movie-card'>\n        <Card.Img variant=\"top\" src={props.poster_path} alt={props.original_title} />\n        <Card.Body>\n            <Card.Title>{props.original_title}</Card.Title>\n            <Link className=\"card-btn btn btn-md btn-dark\" to={`/movies/${props._id}`}> Detalles </Link>\n            <Button variant=\"danger\" onClick={()=>props.delete(props._id)}>Eliminar</Button>\n            \n        </Card.Body>\n        </Card>\n    )\n}\n\n    ","import React, {Component} from 'react'\nimport MoviesServices from '../services/movies.services'\nimport { MoviesCard } from './cards/movies.cards';\nimport {FormControl} from 'react-bootstrap'\n\nclass MoviesList extends Component {\n    \n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            movies: [],\n            search: '',\n            filteredMovies: [],\n            deleted: false\n        }\n\n        this.service = new MoviesServices()\n    }    \n    \n    componentDidMount(){\n        this.service.getAllMovies()\n            .then(movies=>this.setState({\n                movies: movies\n            }))\n    }\n\n\n    deleteMovie = id =>{\n        this.service.deleteTheMovie(id)\n            .then(x=>{\n               const peli= this.state.movies.filter(movie=> movie['_id']!==id)\n               this.setState({\n                   movies: peli\n               })\n            })\n    }\n\n    searchMovie =(e)=> {\n        this.setState({ search: e.target.value })\n        let searchMovie = this.state.movies.filter(movie => movie.original_title.toLowerCase().includes(e.target.value.toLowerCase()))\n        this.setState({ filteredMovies: searchMovie })\n      }\n\n    render(){\n        return(\n            <div className='container'>\n \n                \n                    <FormControl as='input' onChange={this.searchMovie} type=\"text\" placeholder='Buscar película' value={this.state.search} className='search-movie'/>\n\n                <section className='hero'>\n                    <video src=\"https://res.cloudinary.com/dgesryvti/video/upload/v1565296650/Movies_posters/y2mate.com_-_batman_vs_bane_the_dark_knight_rises_full_fight_1080p_hd_rDuetklFtDQ_1080p_vj40gk.mp4\" playsInline autoPlay muted loop>video</video>\n                    <h1>Nuestras películas</h1>\n\n                </section>\n                \n                <div className='row movies-list'>\n\n                  \n\n                    {this.state.search.length ? \n                        this.state.filteredMovies.length ? \n                            this.state.filteredMovies.map((movie, idx)=> <MoviesCard {...movie} key={idx} delete={this.deleteMovie}/>) \n                            :\n                            <div className='not-film'>\n                                <h1>La película que buscas no existe</h1>\n                                <img src=\"https://res.cloudinary.com/dgesryvti/image/upload/v1565341464/Movies_posters/oie_transparent_1_uo2oio.png\" alt=\"errorimage\"/><br/>\n                            </div>\n                        :\n                        this.state.movies.map((movie, idx)=> <MoviesCard {...movie} key={idx} delete={this.deleteMovie}/>) \n\n                    }\n\n                    \n                </div>\n            \n            </div>\n        )\n    }\n}\n\nexport default MoviesList","import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport MoviesService from '../services/movies.services'\nimport {Accordion, Card, Button, Form} from 'react-bootstrap'\n\nexport default class MovieDetails extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { \n            movie: {} \n        }\n        this.service = new MoviesService();\n        \n        let uploadData\n    }\n    \n    componentDidMount(){\n        this.service.movieDetails(this.props.match.params.id)\n            .then(theMovie=>this.setState({\n                movie: theMovie\n            }))\n    }\n\n    handlechange = e => {\n        const { name, value } = e.target\n        this.setState({\n            movie: {\n                ...this.state.movie,\n                [name]: value\n            }\n        })\n    }\n\n    \n    handleSubmit=(e)=>{\n        e.preventDefault()\n        this.service.editTheMovie(this.state.movie._id, (this.state.movie))\n            .then(x=>console.log('done'))\n    }\n\n    \n    handleFileUpload = e => {\n\n        this.uploadData = new FormData();\n        this.uploadData.append(\"poster_path\", e.target.files[0]);\n\n        this.service.handleUpload(this.uploadData)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    movie: {\n                        ...this.state.movie, poster_path: response.secure_url\n                    }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    hideBtn=()=>{\n        setTimeout(() => {\n            this.uploadData=0         \n        }, 2000);\n\n    }\n\n    render(){\n        return(\n            \n            <section>\n                {this.state.movie? \n                <div className='detail'>\n                    <div>\n                        <figure>\n                        <img src={this.state.movie.poster_path} alt={this.state.movie.original_title}/>\n                        </figure>\n                        <form onSubmit={this.handleSubmit}>\n                            <input onChange={this.handleFileUpload} type=\"file\" name=\"poster_path\" id=\"poster_path\" placeholder='Elige imagen' /> <br />\n                            { this.uploadData ? <button type='submit' onClick={this.hideBtn}>Cambiar imagen</button> : null}\n                        </form>\n                    </div>\n\n                    <aside>\n                        <h1>{this.state.movie.original_title}</h1> <br/>\n                        <h3>Sinopsis:</h3>\n                        <p>{this.state.movie.overview}</p>\n                        <a className='btn btn-sm btn-outline-info detail-links' href={this.state.movie.video} target='_blank' rel=\"noopener noreferrer\">Video</a>\n                        <Link className='btn btn-sm btn-outline-secondary detail-links' to='/'>Volver</Link>\n             \n                        <Accordion bsPrefix='accordion'>\n                            <Card className='edit-form'>\n                              <Card.Header className='dark'>\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className='button-edit top-button-edit save'>\n                                  Editar\n                                </Accordion.Toggle>\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" className='button-edit save'>\n                                ✗\n                                </Accordion.Toggle>\n                              </Card.Header>\n                              <Accordion.Collapse eventKey=\"0\" >\n                                <Form className='edit' onSubmit={this.handleSubmit} >\n                                    <Form.Group htmlFor=\"original_title\">\n                                      <Form.Label>Título:</Form.Label>\n                                      <Form.Control onChange={this.handlechange} as=\"textarea\" rows=\"2\" value={this.state.movie.original_title} name='original_title' id='original_title'/>\n                                    </Form.Group>\n                                    <Form.Group htmlFor=\"overview\">\n                                      <Form.Label>Sinopsis:</Form.Label>\n                                      <Form.Control onChange={this.handlechange} as=\"textarea\" rows=\"4\" value={this.state.movie.overview} name='overview' id='overview'/>\n                                    </Form.Group>\n                                    <Form.Group htmlFor=\"video\">\n                                      <Form.Label>URL del vídeo:</Form.Label>\n                                      <Form.Control onChange={this.handlechange} as=\"textarea\" rows=\"2\" value={this.state.movie.video} name='video' id='video'/>\n                                    </Form.Group>\n                                    <Accordion.Toggle className='btn btn-sm btn-outline-info detail-links save' as={Button} type='submit' variant=\"link\" eventKey=\"0\" >\n                                    Guardar\n                                    </Accordion.Toggle>\n                                </Form>\n                                \n                              </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n\n                              \n                    </aside>\n\n                </div>\n            : \n            <div className='error'>\n                <h1>La película que buscas no existe</h1>\n                <img src=\"https://res.cloudinary.com/dgesryvti/image/upload/v1565341464/Movies_posters/oie_transparent_1_uo2oio.png\" alt=\"errorimage\"/><br/>\n                <Link className='btn btn-sm btn-dark return' to='/'>Volver</Link>\n    \n            </div>\n            \n            }\n\n            </section>        \n        \n        )\n    }\n}","import React, { Component } from 'react'\nimport MoviesServices from '../services/movies.services'\nimport Modal from 'react-bootstrap/Modal'\nimport { Redirect } from 'react-router-dom'\n\nclass MovieAddForm extends Component {\n\n    \n    constructor() {\n        super()\n        this.state = {\n            movie: {\n                original_title: '',\n                overview: '',\n                poster_path: '',\n                video: 'https://',\n\n            },\n            show: false,\n            redirect: false\n        }\n        this.handleShow = this.handleShow.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.service = new MoviesServices()\n        let movieId\n    }\n\n\n    handleClose = () => this.setState({ show: false })\n    handleShow = () => this.setState({ show: true })\n\n    handlechange = e => {\n        const { name, value } = e.target\n        this.setState({\n            movie: {\n                ...this.state.movie,\n                [name]: value\n            }\n        })\n    }\n\n    setRedirect = () => {\n        if(this.state.movie.original_title.length){\n            setTimeout(() => {\n                this.setState({\n                    redirect: true\n                })\n                setTimeout(() => {\n                    this.handleClose()\n                }, 300);\n\n            }, 1000);\n        }else{this.handleShow()}\n    }\n\n    handleSubmit=e=>{\n        e.preventDefault()\n        this.service.addMovie(this.state.movie)\n            .then(response=> {\n                this.movieId = response._id\n            })\n    }\n\n    handleFileUpload = e => {\n\n        this.uploadData = new FormData();\n        this.uploadData.append(\"poster_path\", e.target.files[0]);\n\n        this.service.handleUpload(this.uploadData)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    movie: {\n                        ...this.state.movie, poster_path: response.secure_url\n                    }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n        \n        return (\n            \n            <div>\n                {this.state.redirect?<Redirect to={`/movies/${this.movieId}`} />:null}\n                <button className=\"btn btn-dark add-button \" onClick={this.handleShow}>Añadir película</button>\n\n                <Modal show={this.state.show} onHide={this.handleClose} className='modal'>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Nueva película</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"title\">Título</label>\n                                <input required onChange={this.handlechange} value={this.state.movie.original_title} type=\"text\" className=\"form-control\" id=\"original_title\" name=\"original_title\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"description\">Descripción</label>\n                                <input onChange={this.handlechange} value={this.state.movie.overview} type=\"text\" className=\"form-control\" id=\"overview\" name=\"overview\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"length\">Enlace al trailer</label>\n                                <input onChange={this.handlechange} value={this.state.movie.video} type=\"text\" className=\"form-control\" id=\"video\" name=\"video\" />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"poster_path\">Poster</label>\n                                <input onChange={this.handleFileUpload} type=\"file\" className=\"form-control\" id=\"poster_path\" name=\"poster_path\" />\n                            </div>\n                            {this.state.movie.poster_path.length ? <button onClick={this.setRedirect} type=\"submit\" className=\"btn btn-dark\">Añadir</button> : null}\n                        </form>\n                    </Modal.Body>\n                </Modal>\n\n\n            </div>\n        )\n    }\n}\n\nexport default MovieAddForm","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport AddForm from '../components/movie_add_form'\nimport {Link} from 'react-router-dom'\n\nexport const NavBar =()=>{\n\n    return(\n\n        <Navbar bg=\"dark\" expand=\"xl\" fixed=\"top\">\n          <Navbar.Brand><Link to='/' className='nav-links title'>FilmFever</Link></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n              <AddForm/>\n          </Navbar.Collapse>\n        </Navbar>\n    \n    )\n}\n\n\n","import React from 'react';\nimport './App.css';\nimport {Switch, Route} from 'react-router-dom'\nimport MoviesList from './components/movies_list'\nimport MovieDetails from './components/movie_details'\nimport { NavBar } from './components/NavBar';\n\nfunction App() {\n  return (\n     <main>\n       <NavBar/>\n        <Switch>\n\n          <Route exact path=\"/\" component={MoviesList}></Route>\n          <Route exact path=\"/movies/:id\" component={MovieDetails} />\n          \n        </Switch>     \n\n     </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\n\nReactDOM.render((\n        <Router>\n            <App />\n        </Router>\n    ), document.getElementById('root'))\n\n\n"],"sourceRoot":""}